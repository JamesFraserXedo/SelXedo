// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace XedoTests.Features.HomePage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("LogInFromHomePage", Description="\tIn order log in\r\n\tAs a user on the home page\r\n\tI want to submit valid login cred" +
        "entials", SourceFile="Features\\HomePage\\LogInFromHomePage.feature", SourceLine=0)]
    public partial class LogInFromHomePageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LogInFromHomePage.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LogInFromHomePage", "\tIn order log in\r\n\tAs a user on the home page\r\n\tI want to submit valid login cred" +
                    "entials", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I am on the home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("user logs in with valid credentials via sidebar on home page", new string[] {
                "homepage",
                "login"}, SourceLine=9)]
        public virtual void UserLogsInWithValidCredentialsViaSidebarOnHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("user logs in with valid credentials via sidebar on home page", new string[] {
                        "homepage",
                        "login"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 11
 testRunner.When("I attempt to sign into the via the sidebar with username \"sbullets200@mailinator." +
                    "com\" and password \"password\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then("I should be logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage(string email, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "homepage",
                    "login"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("user fails to log in with invalid credentials via sidebar on home page", @__tags);
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 16
 testRunner.When(string.Format("I attempt to sign into the via the sidebar with username \"{0}\" and password \"{1}\"" +
                        "", email, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("I should be not logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("user fails to log in with invalid credentials via sidebar on home page, Variant 0" +
            "", new string[] {
                "homepage",
                "login"}, SourceLine=20)]
        public virtual void UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage_Variant0()
        {
            this.UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage("", "password", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("user fails to log in with invalid credentials via sidebar on home page, Variant 1" +
            "", new string[] {
                "homepage",
                "login"}, SourceLine=20)]
        public virtual void UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage_Variant1()
        {
            this.UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage("sbullets200@mailinator.com", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("user fails to log in with invalid credentials via sidebar on home page, Variant 2" +
            "", new string[] {
                "homepage",
                "login"}, SourceLine=20)]
        public virtual void UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage_Variant2()
        {
            this.UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage("", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("user fails to log in with invalid credentials via sidebar on home page, Variant 3" +
            "", new string[] {
                "homepage",
                "login"}, SourceLine=20)]
        public virtual void UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage_Variant3()
        {
            this.UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage("not@anemail.com", "password", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("user fails to log in with invalid credentials via sidebar on home page, Variant 4" +
            "", new string[] {
                "homepage",
                "login"}, SourceLine=20)]
        public virtual void UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage_Variant4()
        {
            this.UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage("sbullets200@mailinator.com", "pass", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("LogInFromHomePage")]
    public partial class LogInFromHomePageFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LogInFromHomePage.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LogInFromHomePage", "\tIn order log in\r\n\tAs a user on the home page\r\n\tI want to submit valid login cred" +
                    "entials", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I am on the home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("user logs in with valid credentials via sidebar on home page")]
        [NUnit.Framework.CategoryAttribute("homepage")]
        [NUnit.Framework.CategoryAttribute("login")]
        public virtual void UserLogsInWithValidCredentialsViaSidebarOnHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("user logs in with valid credentials via sidebar on home page", new string[] {
                        "homepage",
                        "login"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 11
 testRunner.When("I attempt to sign into the via the sidebar with username \"sbullets200@mailinator." +
                    "com\" and password \"password\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then("I should be logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("user fails to log in with invalid credentials via sidebar on home page")]
        [NUnit.Framework.CategoryAttribute("homepage")]
        [NUnit.Framework.CategoryAttribute("login")]
        [NUnit.Framework.TestCaseAttribute("", "password", new string[0])]
        [NUnit.Framework.TestCaseAttribute("sbullets200@mailinator.com", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("not@anemail.com", "password", new string[0])]
        [NUnit.Framework.TestCaseAttribute("sbullets200@mailinator.com", "pass", new string[0])]
        public virtual void UserFailsToLogInWithInvalidCredentialsViaSidebarOnHomePage(string email, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "homepage",
                    "login"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("user fails to log in with invalid credentials via sidebar on home page", @__tags);
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 16
 testRunner.When(string.Format("I attempt to sign into the via the sidebar with username \"{0}\" and password \"{1}\"" +
                        "", email, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("I should be not logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
